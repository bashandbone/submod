# SPDX-FileCopyrightText: 2025 Adam Poulemanos <89049923+bashandbone@users.noreply.github.com>
#
# SPDX-License-Identifier: LicenseRef-PlainMIT OR MIT

name: Release

permissions:
  contents: write

on:
    push:
        tags:
            - "v*"
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        if: github.event_name != 'workflow_dispatch'
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true

  build:
    runs-on: ${{ matrix.os }}
    needs: [create-release]
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            build-tool: cargo
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            build-tool: cross
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            build-tool: cross
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            build-tool: cargo
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            build-tool: cargo
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-${{ matrix.target }}
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: submod
          checksum: sha256
          target: ${{ matrix.target }}
          build-tool: ${{ matrix.build-tool }}
          token: ${{ secrets.GITHUB_TOKEN }}
          features: git2/vendored-libgit2,git2/vendored-openssl
          dry-run: ${{ github.event_name == 'workflow_dispatch' }}

  github_release:
      name: Create GitHub Release
      needs: [build, publish]
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4

          - name: Download all artifacts
            uses: actions/download-artifact@v4

          - name: Create Release
            uses: softprops/action-gh-release@v2
            with:
                files: |
                    submod-linux-x86_64/submod
                    submod-linux-x86_64-musl/submod
                    submod-windows-x86_64.exe/submod.exe
                    submod-macos-aarch64/submod
                body_path: CHANGELOG.md
                draft: false
                prerelease: false
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
      name: Publish to crates.io
      needs: [build]
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4
            with:
                submodules: recursive

          - uses: actions-rs/toolchain@v1
            with:
                toolchain: stable
                override: true
          - uses: katyo/publish-crates@v2
            with:
                registry-token: ${{ secrets.CRATESIO_KEY }}
